const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const webpack = require('webpack');

module.exports = (env, options) => {
    const devMode = options.mode !== 'production';

    return {

        /* +++++ entry +++++ */
        entry: __dirname + '/src/index.js',

        /* +++++ output +++++ */
        output: {
            // Don't use hash in development
            filename: devMode
                ? '[name].js'
                : '[name]-[contenthash].js',
            chunkFilename: devMode
                ? '[name].js'
                : '[name]-[contenthash].js',
            sourceMapFilename: '[file].map',
            path: __dirname+ '/dist/'
        },

        /* +++++ module +++++ */
        module: {
            rules: [
                {
                    test: /\.(js|jsx)$/,
                    exclude: /node_modules/,
                    use: [{
                        loader: 'babel-loader',
                        options: {
                            presets: ['env', 'react', 'stage-0'],
                            plugins: ["transform-class-properties"]
                        }
                    }],
                },
                {
                    test: /\.s?css$/,
                    exclude: /node_modules/,
                    use: [
                        { loader: MiniCssExtractPlugin.loader },
                        {
                            loader: 'css-loader',
                            options: {
                                modules: true,
                                importLoaders: 3, // three more loaders,
                                localIdentName: '[name]__[local]', /* class name */
                                sourceMap: true,
                                minimize: true
                            }
                        },
                        { loader: 'sass-loader' },
                        {
                            loader: 'sass-resources-loader',
                            options: {
                                resources: [__dirname + '/src/styles/global.scss']
                            }
                        },
                        {
                            loader: 'postcss-loader',
                            options: {
                                config: {
                                    path: __dirname + '/postcss.config.js'
                                }
                            }
                        }
                    ]
                }
            ]
        },

        /* +++++ plugins +++++ */
        plugins: [
            new HtmlWebpackPlugin({template: __dirname + '/src/index.html'}),
            new MiniCssExtractPlugin({
                // Don't use hash in development
                filename: devMode
                    ? '[name].css'
                    : '[name]-[contenthash].css',
                chunkFilename: devMode
                    ? '[name].css'
                    : '[name]-[contenthash].css'
            }),
        ],

        devServer: {
            inline:true,
            port: 4000
        }
    };
};


